#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

// Layer definitions
#define _BASE 0
#define _SYM  1
#define _NAV  2
#define _MOUSE 3

// Define a tapping term for our Layer-Tap keys.
#define TAPPING_TERM 200
// Define a quick tapping term for combos.
#define COMBO_TERM 40

/ {
    behaviors {
        // // Left Hand: Layer-Tap Tab -> Symbol Layer
        // lt_sym_tab: layer_tap_tab {
        //     compatible = "zmk,behavior-layer-tap";
        //     #binding-cells = <2>;
        //     bindings = <&mo _SYM>, <&kp TAB>;
        //     tapping-term-ms = <TAPPING_TERM>;
        // };

        // // Right Hand: Layer-Tap Enter -> Navigation Layer
        // lt_nav_enter: layer_tap_enter {
        //     compatible = "zmk,behavior-layer-tap";
        //     #binding-cells = <2>;
        //     bindings = <&mo _NAV>, <&kp ENTER>;
        //     tapping-term-ms = <TAPPING_TERM>;
        // };
    };

    combos { /* ... Your combos here ... */ };

    keymap {
        compatible = "zmk,keymap";

                default_layer {
            bindings = <
            // Main blocks (48 keys)
            &kp GRAVE  &kp N1    &kp N2    &kp N3    &kp N4    &kp N5      &kp N6    &kp N7    &kp N8    &kp N9    &kp N0    &kp MINUS
            &kp ESC    &kp Q     &kp W     &kp F     &kp P     &kp G       &kp J     &kp L     &kp U     &kp Y     &kp SEMI  &kp DEL
            &kp LSFT   &kp A     &kp R     &kp S     &kp T     &kp D       &kp H     &kp N     &kp E     &kp I     &kp O     &kp SQT
            &kp LCTRL  &kp Z     &kp X     &kp C     &kp V     &kp B       &kp K     &kp M     &kp COMMA &kp DOT   &kp FSLH  &kp RSFT

            // Thumb clusters (12 keys)
            // The order here matches the dtsi: inner key first for the left hand.
            
            &trans     &kp SPACE &lt _SYM TAB   &trans    &kp LGUI  &kp LALT &trans       &trans    &kp BSPC  &trans &kp LEFT &kp RIGHT &kp DOWN
            >;
            // TODO now the lt shit says it aint there.
        };

        symbol_layer {
            bindings = <
            
            &kp TILDE  &kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR  &kp RPAR  &kp UNDER
            &trans     &trans    &trans    &trans    &trans    &trans      &trans    &trans    &trans    &trans    &trans    &kp EQUAL
            &trans     &kp DLLR  &kp EQUAL &kp LPAR  &kp RPAR  &kp AT      &trans    &kp MINUS &kp PLUS  &kp LBKT  &kp RBKT  &kp PIPE
            &trans     &kp EXCL  &kp HASH  &kp LBRC  &kp RBRC  &trans      &trans    &trans    &trans    &trans    &trans    &kp BSLH


            &trans     &trans    &trans    &trans    &trans    &trans      &trans    &trans    &trans    &trans    &trans    &trans
            >;
        };

        nav_layer {
            bindings = <
            
            &trans     &kp F1    &kp F2    &kp F3    &kp F4    &kp F5      &kp F6    &kp F7    &kp F8    &kp F9    &kp F10   &kp F11
            &trans     &bt BT_CLR&bt BT_NXT&bt BT_PRV&bt BT_SEL 0 &bt BT_SEL 1 &kp HOME  &kp PG_DN &kp PG_UP &kp END   &trans    &kp F12
            &mo _MOUSE &trans    &trans    &trans    &trans    &trans      &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &trans    &trans
            &trans     &trans    &trans    &trans    &trans    &trans      &kp C_MUTE &kp C_VOLUME_DOWN &kp C_VOLUME_UP &kp C_PP &trans    &bootloader


            &trans     &trans    &trans    &trans    &trans    &trans      &trans    &trans    &trans    &trans    &trans    &trans
            >;
        };

        mouse_layer {
            bindings = <

            &trans      &trans    &trans    &trans    &trans    &trans      &trans    &trans    &trans    &trans    &trans    &trans
            &trans      &msc SCRL_UP    &mkp LCLK &mkp RCLK &trans    &trans      &trans    &trans    &mmv U    &trans    &trans    &trans
            &trans      &mkp MCLK &trans    &trans    &trans    &trans      &mmv L    &mmv D    &mmv R    &trans    &trans    &trans
            &trans      &msc SCRL_DOWN    &trans    &trans    &trans    &trans      &trans    &trans    &trans    &trans    &trans    &trans
            &trans      &trans    &trans    &trans    &trans    &trans      &trans    &trans    &trans    &trans    &trans    &trans
            >;
        };
    };
};